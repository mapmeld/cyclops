doctype
html
  head
    meta(charset="utf-8")
    meta(name="viewport", content="width=device-width, initial-scale=1")
    link(rel="stylesheet", type="text/css", href="styles/bootstrap.min.css")
    link(rel="stylesheet", type="text/css", href="styles/codemirror.css")
    link(rel="stylesheet", type="text/css", href="styles/linear.css")
  body
    .container
      .row
        .col-sm-12
          h1
            span xWEBSITEx&nbsp;
            span.linear xHELPx
          br
          br
          p(style="font-size: 18px")
            span xLANGNAMEx or&nbsp;
            span.linear 'xHELPx'
            span.description is a programming language.
          br

      .row
        .col-sm-6
          h4#codeheader xLANGNAMEx Code
          textarea#interpreter.compare xHELPx\n> 'xLANGNAMEx xVERSIONx xWEBSITEx'\n\nPrinting\nxPRINTx hello world\n> 'hello world'\n\nMath\n44 6\n> 50\n\nVariables\n\nVARONE 50\nxPRINTx VARONE xSUBTRACTx 10\n> 40\n\nFunction\nxFUNCSTARTx FUNCONE\n&nbsp;&nbsp;xPARAMONEx xMULTIPLYx xPARAMONEx\nxFUNCENDx
          button.hide.linear xFUNCSTARTx>
        .col-sm-6
          h4#sideheader Pseudocode
          code#consoler.plain.compare
            span help();
            br
            br
            span print('hello world');
            br
            span > 'hello world'
            br
            br
            span 44 + 6
            br
            span > 50
            br
            br
            span var x = 500
            br
            span console.log(x - 100);
            br
            span > 400
            br
            br
            function square(param1) {
            br
            span &nbsp;&nbsp;return param1 * param1;
            br
            span }
            br
      .row
        .col-sm-12
          h3 Guessing Game
          p
            span A guessing game written in&nbsp;
            span.linear xHELPx
            span :
      .row
        .col-sm-6
          code.compare
            xHELPx
            br
            span xPRINTx I'm thinking of a number one to one hundred
            br
            span VARTWO xRANDx
            br
            span xLOOPx
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;VARTHREE xINPUTx Guess a number:
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;xSWITCHx VARTHREE
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xGREATERx VARTWO
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xPRINTx too high
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xLESSERx VARTWO
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xPRINTx too low
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xDUBEQUALx VARTWO
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xBREAKx
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;xSWITCHEDx
            br
            span xLOOPx
            br
            span xPRINTx you guessed correctly! you win!
            br

        .col-sm-6
          code.compare.plain
            span help();
            br
            span print("..a number 1-100");
            br
            span var x = random(1, 100);
            br
            span while(true) {
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;var y = input("Guess:");<br/>
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if y > x:
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print("too high");
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if y < x:
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print("too low");
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if y == x:
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
            br
            br
            br
            span print("you guessed correctly! you win!")
            br
      .row
        .col-sm-4
          h2 Installing
          .well
            strong npm install xNPMx -g
            br
            strong xCLIx game.cyc
        .col-sm-4
          h3 Plz Help
          .well
            span.plzhelp How you can help.
        .col-sm-4
          h3 Open Source
          .well
            a(href="xGITHUBLINKx")
              h4 Docs and Source
      .row
        .col-sm-12
          h3 Commands
          li
            span.linear xHELPx
            span &nbsp;= help
          li
            span.linear xPRINTx
            span &nbsp;= print
          li
            span.linear xINPUTx
            span &nbsp;receive user input (command line or input())
          li
            span.linear xRANDx
            span &nbsp; = random number (1-100)
          li
            span.linear xLOOPx
            span &nbsp;= loop until flag is raised
          li
            span.linear xBREAKx
            span &nbsp;= raise flag (exit loop)
          br

          h3 Math
          p Math is evaluated left-to-right, without order of operations. So 3 + 2 * 4 == 20 not 11. It might be easier to do one math operation at a time.
          li
            span.linear xADDx
            span &nbsp;= add
          li
            span addition done by placing numbers on same line (
            span.linear 24 6
            span ) returns the sum.
          li
            span.linear xSUBTRACTx
            span &nbsp;= subtract
          li
            span.linear xDIVIDEx
            span &nbsp;= divide
          li
            span.linear xMULTIPLYx
            span &nbsp;= multiply

          h3 Conditional
          li
            span.linear xSWITCHx
            span &nbsp;= conditional switch</li>
          li
            span.linear xSWITCHEDx
            span &nbsp;= end conditional</li>
          li
            span.linear xDUBEQUALx
            span &nbsp;= equality (==)</li>
          li
            span.linear xGREATERx
            span &nbsp;= greater-than
          li
            span.linear xLESSERx
            span &nbsp;= less-than
          p
            span Conditionals if value of variable&nbsp;
            span.linear VARONE
            span &nbsp;is greater than, less than, or equal to 5
          code
            span xSWITCHx VARONE
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;xGREATERx 3
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xPRINTx greater than 3
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;xGREATERx 5
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xPRINTx greater than 5, too
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;xLESSERx 5
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xPRINTx less than 5
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;xDUBEQUALx 5
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xPRINTx equal to 5
            br
            span xSWITCHEDx
      .row
        .col-sm-12
          h3 Functions
          p Declare a function with this keyword: <span class="linear">xFUNCSTARTx</span>
            <br/>Inside the function, <span class="linear">xPARAMONEx</span> will represent the first parameter passed into the function,
            followed by <span class="linear">xPARAMTWOx, xPARAMTHREEx, xPARAMFOURx</span>, and <span class="linear">xPARAMFIVEx</span>
          p
            span Write the squaring function <i>f(x) = x * x</i>. Let's name the function <span class="linear">FUNCONE</span>.
          code
            span xFUNCSTARTx FUNCONE
            br
            span &nbsp;&nbsp;&nbsp;&nbsp;xPARAMONEx xMULTIPLYx xPARAMONEx
            br
            span xFUNCENDx
          p Now call the function:
          code
            span FUNCONE 4
            br
            span > 16
    br
    br
    br
    // <script src="/scripts/aegean-numbers.js"></script>
    script(src="/scripts/cyclops.js")
    script(src="//code.jquery.com/jquery-1.12.0.min.js")
    script(src="/scripts/codemirror.js")
    script(src="/scripts/javascript.js")
    script(src="/scripts/interpreter.js")
